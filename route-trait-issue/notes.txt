Details for Issue: https://github.com/micronaut-projects/micronaut-core/issues/1103
                   

Issue Title: Compiling Controller with Route/Method Defined in Trait Fails to Compile

When using Micronaut 1.0.3 with a get method in a Groovy Trait, the compile fails with the error:

    ....\HelloController.groovy: -1: The route declares a uri variable named [x], but no corresponding method argument is present

See https://github.com/mphouston/mn-issues/tree/master/route-trait-issue for a bare-bones application that reproduces the problem.  Use this command to run the app:

    gradlew run

I would like to implement some common controller logic in a Groovy Trait and use that in many controllers.  This works for simple routes in the trait, but fails when a route has uri variable.

Quick summary of the code:

    HelloController.groovy
      @CompileStatic
      @Controller("/hello")
      class HelloController implements ControllerTrait {
          @Get("/{x}")
          @Produces(MediaType.TEXT_PLAIN)
          String index(String x) {
              "Hello World ${x}"
          }
      }

    ControllerTrait.groovy
      trait ControllerTrait {
          @Get("/trait/{x}")
          @Produces(MediaType.TEXT_PLAIN)
          String indexT(String x) {
              "Hello World Trait ${x}"
          }
      }

I have not tried this with Java interfaces with default parameters.  I would prefer to stay with Groovy.


The app was created with this micronaut command (1.0.0):

    mn create-app example.route-trait-issue -l groovy

Except for the two classes above and a change to build.gradle to micronaut 1.0.3, the application is the default from the micronaut command.

